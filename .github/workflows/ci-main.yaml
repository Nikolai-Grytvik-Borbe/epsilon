on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-

      - name: Yarn install
        run: yarn install --frozen-lockfile

      - name: Nuxt build
        run: yarn run build

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}

      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

#      - name: Containerify
#        run: |
#          yarn containerify --folder . --verbose \
#            --toRegistry https://ghcr.io/v2 \
#            --toImage ${{ github.repository }}:latest \
#            --toToken ${{ secrets.GITHUB_TOKEN }}
#          curl --request GET \
#            --url "https://api.github.com/octocat" \
#            --header "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
#            --header "X-GitHub-Api-Version: 2022-11-28"
#          AUTH_URL="https://ghcr.io/v2/jwt/auth?scopes=write:package" \
#          TOKEN=$(curl -sL --user "${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}" "${AUTH_URL}")
#          echo $TOKEN
##            --toToken "Basic ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}"
